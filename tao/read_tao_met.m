function met=read_tao_met(fname)
% read_tao_met.m
% create mat files from meteo data (wind, air temperature, SST, rel.
% humidity)
% $Revision: 1.7 $ $Date: 2011/07/29 23:31:10 $ $Author: aperlin $	
% Originally A. Perlin
%
% updated by S. Warner in June 2014 to be able to read the new ascii files
% generated by the new TAO download results


fid=fopen(fname,'r');
qlt=strvcat('Data Quality Codes(Q):',...
'0 = unknown',...
'1 = good data',...
'2 = probably good data',...
'3 = questionable data',...
'4 = bad data',...
'5 = adjusted data',...
'9 = missing data');
srs=strvcat('Data Mode Codes(M):',...
'R = real-time data',...
'P = provisional data',...
'D = delayed mode data',...
'M = mixed real-time and delayed mode data');
desc = strvcat('Surface Meteorological Data:',...
'Surface met data are delivered in these files as a package for the period',...
'after 1989 when relative humidity first became available. Sea surface',...
'temperature, air temperature, and winds are available before 1989 at ',...
'several sites, and since 1980 at 0,110W. Winds use the oceanographic ',...
'convention. A wind with zonal and meridional components of 1.0 and 1.0 ',...
'is blowing toward the Northeast. Daily averaged wind speeds and directions',...
'are based on daily averaged wind velocity components. Wind speed and wind',...
'components are in units of meters per second, direction is in degrees ',...
'clockwise from true north, air temperature and sea surface temperature are',...
'in degrees celsius, and relative humidity is in percent.');
% dd=textscan(fid,'%s',3,'delimiter','\r\n');
dd=textscan(fid,'%s',2,'delimiter','\r\n');
a=char(dd{:});
met.readme=strvcat('Meteorological data (wind, air temperature, SST, rel. humidity) ',...
    ' ',a(1,:),a(2,:),' ',qlt,'  ',srs,'  ',desc);
ib=find(a(1,:)==',');
ib2 = find(a(1,:) == ')');
% nblocks=str2num(a(1,ib(1)+1:ib(1)+4));
nblocks=str2num(a(1,ib+1:ib2-12));

for i=1:nblocks
    dd=textscan(fid,'%s',3,'delimiter','\r\n');
    a=char(dd{:});
%     ik=find(a(1,:)==',');
%     nlines=str2double(a(1,ik(1)+1:end-6));
    ik=find(a(1,:)=='(');
    ikc = find(a(1,:)==',');
    nlines=str2num(a(1,ik+1:ikc-11));
    
%     ikk=find(a(2,:)=='Q');
%     depth=str2num(a(2,18:ikk-1));
    ikk=find(a(2,:)=='Q');
    depth=str2num(a(2,20:ikk(1)-1));
   
    met(i).depth_wind=depth(1);
    met(i).depth_airt=depth(5);
    met(i).depth_rh=depth(6);
    
    secs=strfind(a(3,:),'HHMMSS');
    mode=strfind(a(2,:),'Mode');
    if ~isempty(mode)
        tmp=textscan(fid,['%s %s %f %f %f %f %f %f %f %s %s'],nlines);
    else
        tmp=textscan(fid,['%s %s %f %f %f %f %f %f %f %s'],nlines);
    end    
    if ~isempty(secs)
        met(i).time=datenum([char(tmp{1}) char(tmp{2})],'yyyymmddHHMMSS');
    else
        met(i).time=datenum([char(tmp{1}) char(tmp{2})],'yyyymmddHHMM');
    end
    met(i).uwnd=tmp{3};
    met(i).vwnd=tmp{4};
    met(i).airt=tmp{7};
    met(i).rh=tmp{8};
    
    met(i).uwnd(met(i).uwnd<-99)=NaN;
    met(i).vwnd(met(i).vwnd<-99)=NaN;
    met(i).airt(met(i).airt<-99)=NaN;
    met(i).rh(met(i).rh<-99)=NaN;
    
    quality=char(tmp{10});
    met(i).quality_uwnd=cellstr(quality(:,1));
    met(i).quality_vwnd=cellstr(quality(:,2));
    met(i).quality_airt=cellstr(quality(:,5));
    met(i).quality_rh=cellstr(quality(:,6));
    if ~isempty(mode)
        mode=char(tmp{10});
        met(i).mode_uwnd=cellstr(mode(:,1));
        met(i).mode_vwnd=cellstr(mode(:,2));
        met(i).mode_airt=cellstr(mode(:,5));
        met(i).mode_rh=cellstr(mode(:,6));
    end
   dd=textscan(fid,'%s',1,'delimiter','\r\n');
end
fclose(fid);
id=find(fname=='.');
save(fname(1:id-1),'met')
